[{"D:\\OpenServer\\domains\\react\\ts-react-test\\src\\index.tsx":"1","D:\\OpenServer\\domains\\react\\ts-react-test\\src\\App.tsx":"2","D:\\OpenServer\\domains\\react\\ts-react-test\\src\\server-mock.ts":"3","D:\\OpenServer\\domains\\react\\ts-react-test\\src\\components\\index.ts":"4","D:\\OpenServer\\domains\\react\\ts-react-test\\src\\components\\List\\List.tsx":"5","D:\\OpenServer\\domains\\react\\ts-react-test\\src\\components\\ListItem\\ListItem.tsx":"6"},{"size":214,"mtime":1607334892000,"results":"7","hashOfConfig":"8"},{"size":2073,"mtime":1637751495251,"results":"9","hashOfConfig":"8"},{"size":674,"mtime":1607334892000,"results":"10","hashOfConfig":"8"},{"size":100,"mtime":1637677807707,"results":"11","hashOfConfig":"8"},{"size":780,"mtime":1637751222671,"results":"12","hashOfConfig":"8"},{"size":571,"mtime":1637751019270,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1w07waw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\OpenServer\\domains\\react\\ts-react-test\\src\\index.tsx",[],["29","30"],"D:\\OpenServer\\domains\\react\\ts-react-test\\src\\App.tsx",["31"],"import React, { useEffect, useState } from 'react'\nimport { List } from './components'\nimport { startMirage } from './server-mock'\nimport { IDataObject } from './types/types'\n\n\nif (process.env.NODE_ENV === 'development') {\n  startMirage()\n}\n\nfunction App() {\n  const [list, setList] = useState<IDataObject[]>([])\n\n  useEffect(() => {\n    // получение данных с сервера при рождении компонента\n    getDataList();\n  }, [])\n\n  // получаем данные с сервера и заносим в состояние\n  async function getDataList(): Promise<void>{\n    try{\n      const response = await fetch('/api/regions')\n      const data: IDataObject[] = await response.json()\n      setList(listToTree(data))\n      \n    } catch(e){\n      console.error(e);\n    }\n  }\n\n  // функция преобразования массива в древовидную структуру\n  function listToTree(arr: IDataObject[]): IDataObject[] {\n    // сортируем массив от детей до родителей\n    const newArr: IDataObject[] = arr.sort((a: IDataObject, b: IDataObject) => b.path.length - a.path.length);\n  \n    const res: IDataObject[] = [];\n    for (let el of newArr) {\n      // находим родителя текущего элемента\n      const parent: IDataObject | undefined =\n        newArr.find(\n          (par: IDataObject) =>\n            el.path !== par.path &&\n            el.path.includes(par.path) &&\n            el.path.length - 2 === par.path.length,\n        );\n      \n      // заносим детей к родителям, и к корневым родителям\n      if (parent) {\n        if (!Array.isArray(parent.child)) parent.child = [];\n        parent.child.push(el);\n        // если корневой родитель, то заносим в res\n        if (parent.path.length === 1) res.push(parent);\n      }\n    } /* завершение цикла for */\n    return res;\n  }\n\n  return <div className=\"App\">\n    <List items={list} />\n  </div>\n}\n\nexport default App\n","D:\\OpenServer\\domains\\react\\ts-react-test\\src\\server-mock.ts",[],"D:\\OpenServer\\domains\\react\\ts-react-test\\src\\components\\index.ts",[],"D:\\OpenServer\\domains\\react\\ts-react-test\\src\\components\\List\\List.tsx",[],"D:\\OpenServer\\domains\\react\\ts-react-test\\src\\components\\ListItem\\ListItem.tsx",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":17,"column":6,"nodeType":"40","endLine":17,"endColumn":8,"suggestions":"41"},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDataList'. Either include it or remove the dependency array.","ArrayExpression",["46"],["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [getDataList]",{"range":"49","text":"50"},[416,418],"[getDataList]"]